{"version":3,"sources":["components/Catapi/Allcatimgtable.jsx","components/Catapi/Catimgdata.js","components/Dogapi/Alldogimgtable.jsx","components/Dogapi/Dogimgdata.js","components/Datatable/Datatable.jsx","components/Datatable/Dataselectapp.js","components/navigation/Menu.js","App.js","index.js"],"names":["Allcatimgtable","apicatData","useState","currentPage","setcurrentPage","isPress","setPress","show","setShow","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","handleClick","event","Number","target","id","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","currentItems","slice","renderPageNumbers","map","number","onClick","className","handleNextbtn","handlePrevbtn","pageIncrementBtn","pageDecrementBtn","mouseOver","mouseOut","cellPadding","cellSpacing","row","url","src","alt","onMouseOver","onMouseOut","href","name","origin","Life_span","Description","Temperament","disabled","Catimgdata","isErrorr","setIsErrorr","isLoadingg","setIsLoadingg","setApiapicatData","useEffect","fetchData","a","axios","get","process","infoo","resultt","datainforr","cathoverimgdata","data","console","log","imgul","image","life_span","description","temperament","clearTimeout","Alldogimgtable","apiData","bred_for","breed_group","height","Dogimgdata","setApiData","REACT_APP_API_kEY_DOG","infor","doghoverimgdata","oricontry","country_code","dogimg","metric","Datatable","dataa","columns","Object","keys","heading","index","column","Dataselectapp","setDataa","query","setQuery","searchColumns","setSearchColumns","isLoading","setIsLoading","isError","setIsError","info","result","datainfo","catData","rows","type","placeholder","value","onChange","checked","includes","e","prev","filter","sc","some","toString","toLowerCase","indexOf","withRouter","props","openMenu","setOpenMenu","setClassNames","num","classArr","join","pushToRoute","route","history","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f770ed2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n// import \"./alldogimgtable.css\";\n\n// npm install --save react-jsx\nexport const Allcatimgtable = ({ apicatData }) => {\n  const [currentPage, setcurrentPage] = useState(1);\n  const [isPress, setPress] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n  const pageNumberLimit = 5;\n  const itemsPerPage = 5;\n\n  const handleClick = (event) => {\n    setcurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(apicatData.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = apicatData.slice(indexOfFirstItem, indexOfLastItem);\n\n  const renderPageNumbers = pages.map((number) => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return (\n        <li\n          key={number}\n          id={number}\n          onClick={handleClick}\n          className={currentPage === number ? \"active\" : null}\n        >\n          {number}\n        </li>\n      );\n    } else {\n      return null;\n    }\n  });\n\n  const handleNextbtn = () => {\n    setcurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setcurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit === 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementBtn = null;\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\n  }\n\n  let pageDecrementBtn = null;\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\n  }\n  const handleApibtn = () => {\n    setPress(!isPress);\n  };\n\n  const mouseOver = () => {\n    setShow(true);\n  };\n  const mouseOut = () => {\n    setShow(false);\n  };\n  return (\n    <>\n      <button className=\"dogbtn\" onClick={handleApibtn}>\n        {isPress ? \"All images\" : \"Names\"}\n      </button>\n\n      <table className=\"dml_table\" cellPadding={0} cellSpacing={0}>\n        <thead className=\"sticky-thc\">\n          <tr>\n            <th>Id</th>\n            {isPress ? null : <th>Image</th>}\n\n            {isPress ? <th>Name & Image</th> : <th>Name</th>}\n\n            <th>Origin</th>\n\n            <th>Life_span</th>\n            <th>Description</th>\n            <th>Temperament</th>\n          </tr>\n        </thead>\n        <tbody>\n          {currentItems.map((row, url) => (\n            <tr key={url}>\n              <td>{row.id}</td>\n              {isPress ? null : (\n                <td>\n                  <img src={row.url} alt=\"cat\" />\n                </td>\n              )}\n\n              {isPress ? (\n                <td onMouseOver={mouseOver} onMouseOut={mouseOut}>\n                  <p href=\"#\">\n                    {row.name} {show ? <img src={row.url} alt=\"cat\" /> : null}\n                  </p>\n                </td>\n              ) : (\n                <td>{row.name} </td>\n              )}\n\n              <td>{row.origin}</td>\n\n              <td>{row.Life_span}</td>\n              <td>{row.Description}</td>\n              <td>{row.Temperament}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"pageControler\">\n        <ul className=\"pageNumbers\">\n          <li>\n            <button\n              onClick={handlePrevbtn}\n              disabled={currentPage === pages[0] ? true : false}\n            >\n              Prev\n            </button>\n          </li>\n          {pageDecrementBtn}\n          {renderPageNumbers}\n          {pageIncrementBtn}\n\n          <li>\n            <button\n              onClick={handleNextbtn}\n              disabled={currentPage === pages[pages.length - 1] ? true : false}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n// import Navbar from \"./components/navigation/Navbar\";\n\nimport { Allcatimgtable } from \"./Allcatimgtable\";\n\nfunction Catimgdata() {\n  const [isErrorr, setIsErrorr] = useState(false);\n  const [isLoadingg, setIsLoadingg] = useState(false);\n  const [apicatData, setApiapicatData] = useState([\n    {\n      id: \"\",\n      name: \"\",\n      origin: \"\",\n      Life_span: \"\",\n      Description: \"\",\n      Temperament: \"\",\n      url: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsErrorr(false);\n      //   setIsLoadingg(true);\n\n      try {\n        const resultt = await axios.get(\n          `https://api.thecatapi.com/v1/breeds?api_key=${process.env.REACT_APP_API_KEY_CAT}`\n          //   `https://api.thecatapi.com/v1/breeds?attach_breed=0&api_key=${process.env.REACT_APP_API_KEY_CAT}`\n        );\n\n        let datainforr = [];\n        let cathoverimgdata = resultt.data;\n        console.log(resultt.data);\n        for (let infoo in cathoverimgdata) {\n          // check if origin or country code availabe\n          let imgul = \"\";\n          !cathoverimgdata[infoo].image\n            ? (imgul = \"\")\n            : (imgul = cathoverimgdata[infoo].image.url);\n\n          datainforr.push({\n            id: cathoverimgdata[infoo].id,\n            name: cathoverimgdata[infoo].name,\n            origin: cathoverimgdata[infoo].origin,\n            Life_span: cathoverimgdata[infoo].life_span,\n            Description: cathoverimgdata[infoo].description,\n            Temperament: cathoverimgdata[infoo].temperament,\n            url: imgul,\n          });\n        }\n        console.log(datainforr);\n        setApiapicatData(datainforr);\n        setIsLoadingg(false);\n      } catch (error) {\n        setIsErrorr(true);\n      }\n      setIsLoadingg(false);\n    };\n    fetchData();\n    return clearTimeout(fetchData);\n  }, []);\n\n  return (\n    <>\n      <div className=\"heading\">\n        <h1>Cats Characteristics</h1>\n      </div>\n      {/* <br /> */}\n      {/* Error message */}\n      {isErrorr && <div>Something went wrong ...</div>}\n      {/* loading data  */}\n      {isLoadingg ? (\n        <div>Loading ...</div>\n      ) : (\n        <div>\n          <Allcatimgtable apicatData={apicatData} />\n        </div>\n      )}\n    </>\n  );\n}\nexport default Catimgdata;\n","import React, { useState } from \"react\";\n// import \"./alldogimgtable.css\";\n\n// npm install --save react-jsx\n\nexport const Alldogimgtable = ({ apiData }) => {\n  const [currentPage, setcurrentPage] = useState(1);\n  const [isPress, setPress] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n  const pageNumberLimit = 5;\n  const itemsPerPage = 5;\n\n  const handleClick = (event) => {\n    setcurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(apiData.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = apiData.slice(indexOfFirstItem, indexOfLastItem);\n\n  const renderPageNumbers = pages.map((number) => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return (\n        <li\n          key={number}\n          id={number}\n          onClick={handleClick}\n          className={currentPage === number ? \"active\" : null}\n        >\n          {number}\n        </li>\n      );\n    } else {\n      return null;\n    }\n  });\n\n  const handleNextbtn = () => {\n    setcurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setcurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit === 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementBtn = null;\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\n  }\n\n  let pageDecrementBtn = null;\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\n  }\n  const handleApibtn = () => {\n    setPress(!isPress);\n  };\n\n  const mouseOver = () => {\n    setShow(true);\n  };\n  const mouseOut = () => {\n    setShow(false);\n  };\n  return (\n    <>\n      <button className=\"dogbtn\" onClick={handleApibtn}>\n        {isPress ? \"All images\" : \"Names\"}\n      </button>\n\n      <table className=\"dml_table\" cellPadding={0} cellSpacing={0}>\n        <thead className=\"sticky-thc\">\n          <tr>\n            <th>Id</th>\n            {isPress ? null : <th>Image</th>}\n\n            {isPress ? <th>Name & Image</th> : <th>Name</th>}\n\n            <th>Origin</th>\n            <th>Breed_for</th>\n            <th>Breed_group</th>\n            <th>Life_span</th>\n            <th>Height</th>\n            <th>Temperament</th>\n          </tr>\n        </thead>\n        <tbody>\n          {currentItems.map((row, url) => (\n            <tr key={url}>\n              <td>{row.id}</td>\n              {isPress ? null : (\n                <td>\n                  <img src={row.url} alt=\"dog\" />\n                </td>\n              )}\n\n              {isPress ? (\n                <td onMouseOver={mouseOver} onMouseOut={mouseOut}>\n                  <p href=\"#\">\n                    {row.name} {show ? <img src={row.url} alt=\"dog\" /> : null}\n                  </p>\n                </td>\n              ) : (\n                <td>{row.name} </td>\n              )}\n\n              <td>{row.origin}</td>\n              <td>{row.bred_for}</td>\n              <td>{row.breed_group}</td>\n              <td>{row.life_span}</td>\n              <td>{row.height} cm</td>\n              <td>{row.temperament}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"pageControler\">\n        <ul className=\"pageNumbers\">\n          <li>\n            <button\n              onClick={handlePrevbtn}\n              disabled={currentPage === pages[0] ? true : false}\n            >\n              Prev\n            </button>\n          </li>\n          {pageDecrementBtn}\n          {renderPageNumbers}\n          {pageIncrementBtn}\n\n          <li>\n            <button\n              onClick={handleNextbtn}\n              disabled={currentPage === pages[pages.length - 1] ? true : false}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n// export default Alldogimgtable;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n// import Navbar from \"./components/navigation/Navbar\";\n\nimport { Alldogimgtable } from \"./Alldogimgtable\";\n\nexport function Dogimgdata() {\n  const [isErrorr, setIsErrorr] = useState(false);\n  const [isLoadingg, setIsLoadingg] = useState(false);\n  const [apiData, setApiData] = useState([\n    {\n      id: \"\",\n      bred_for: \"\",\n      breed_group: \"\",\n      height: \"\",\n      name: \"\",\n      origin: \"\",\n      life_span: \"\",\n      Temperament: \"\",\n      url: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsErrorr(false);\n      //   setIsLoadingg(true);\n\n      try {\n        const resultt = await axios.get(\n          `https://api.thedogapi.com/v1/breeds?api_key=${process.env.REACT_APP_API_kEY_DOG}`\n        );\n\n        let datainforr = [];\n        let doghoverimgdata = resultt.data;\n        // console.log(resultt.data);\n        for (let infor in doghoverimgdata) {\n          // check if origin or country code availabe\n\n          let oricontry = \"\";\n          if (\n            !doghoverimgdata[infor].origin &&\n            !doghoverimgdata[infor].country_code\n          ) {\n            oricontry = \"\";\n          } else {\n            doghoverimgdata[infor].origin\n              ? (oricontry = doghoverimgdata[infor].origin)\n              : (oricontry = doghoverimgdata[infor].country_code);\n          }\n          // check if image available\n\n          let dogimg = \"\";\n          if (!doghoverimgdata[infor].image) {\n            dogimg = \"\";\n          } else {\n            dogimg = doghoverimgdata[infor].image.url;\n          }\n\n          datainforr.push({\n            id: doghoverimgdata[infor].id,\n            bred_for: doghoverimgdata[infor].bred_for,\n            breed_group: doghoverimgdata[infor].breed_group,\n            height: doghoverimgdata[infor].height.metric,\n            name: doghoverimgdata[infor].name,\n            origin: oricontry,\n            life_span: doghoverimgdata[infor].life_span,\n            temperament: doghoverimgdata[infor].temperament,\n            url: dogimg,\n          });\n        }\n\n        setApiData(datainforr);\n        setIsLoadingg(false);\n      } catch (error) {\n        setIsErrorr(true);\n      }\n      setIsLoadingg(false);\n    };\n    fetchData();\n    return clearTimeout(fetchData);\n  }, []);\n\n  return (\n    <div className=\"heading\">\n      <h1>Dogs characteristics</h1> <br />\n      {/* Error message */}\n      {isErrorr && <div>Something went wrong ...</div>}\n      {/* loading data  */}\n      {isLoadingg ? (\n        <div>Loading ...</div>\n      ) : (\n        <div>\n          <Alldogimgtable apiData={apiData} />\n        </div>\n      )}\n    </div>\n  );\n}\n\n// export default Dogimgdata;\n","import React, { useState } from \"react\";\n\nconst Datatable = ({ dataa }) => {\n  const columns = dataa[0] && Object.keys(dataa[0]);\n  const [currentPage, setcurrentPage] = useState(1);\n\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n  const pageNumberLimit = 5;\n  const itemsPerPage = 5;\n\n  const handleClick = (event) => {\n    setcurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(dataa.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = dataa.slice(indexOfFirstItem, indexOfLastItem);\n\n  const renderPageNumbers = pages.map((number) => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return (\n        <li\n          key={number}\n          id={number}\n          onClick={handleClick}\n          className={currentPage === number ? \"active\" : null}\n        >\n          {number}\n        </li>\n      );\n    } else {\n      return null;\n    }\n  });\n\n  const handleNextbtn = () => {\n    setcurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setcurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit === 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementBtn = null;\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\n  }\n\n  let pageDecrementBtn = null;\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\n  }\n\n  return (\n    <>\n      <table className=\"dml_table\" cellPadding={0} cellSpacing={0}>\n        <thead className=\"sticky-thc\">\n          <tr>\n            {dataa[0] &&\n              columns.map((heading, index) => <th key={index}>{heading}</th>)}\n          </tr>\n        </thead>\n        <tbody>\n          {currentItems.map((row, index) => (\n            <tr key={index}>\n              {columns.map((column, id) => (\n                <td key={id}>{row[column]}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"pageControler\">\n        <ul className=\"pageNumbers\">\n          <li>\n            <button\n              onClick={handlePrevbtn}\n              disabled={currentPage === pages[0] ? true : false}\n            >\n              Prev\n            </button>\n          </li>\n          {pageDecrementBtn}\n          {renderPageNumbers}\n          {pageIncrementBtn}\n\n          <li>\n            <button\n              onClick={handleNextbtn}\n              disabled={currentPage === pages[pages.length - 1] ? true : false}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Datatable;\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nimport Datatable from \"./Datatable\";\n\nfunction Dataselectapp() {\n  const [dataa, setDataa] = useState([\n    {\n      id: \"\",\n      name: \"\",\n      origin: \"\",\n      Life_span: \"\",\n      Description: \"\",\n      Temperament: \"\",\n      // Image: {},\n    },\n  ]);\n  const [query, setQuery] = useState(\"\");\n  const [searchColumns, setSearchColumns] = useState([\"origin\"]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      setIsLoading(true);\n\n      try {\n        const result = await axios.get(\n          `https://api.thecatapi.com/v1/breeds?attach_breed=0&api_key=${process.env.REACT_APP_API_KEY_CAT}`\n        );\n\n        let datainfo = [];\n        let catData = result.data;\n        // console.log(catData);\n        for (let info in catData) {\n          datainfo.push({\n            id: catData[info].id,\n            name: catData[info].name,\n            origin: catData[info].origin,\n            Life_span: catData[info].life_span,\n            Description: catData[info].description,\n            Temperament: catData[info].temperament,\n            // Image: catData[info].image,\n          });\n        }\n        setDataa(datainfo);\n\n        // console.log(dataa);\n        setIsLoading(false);\n      } catch (error) {\n        setIsError(true);\n      }\n      setIsLoading(false);\n    };\n    fetchData();\n    return clearTimeout(fetchData);\n  }, []);\n\n  // not all data is string\n  const dataFilter = (rows) => {\n    return rows.filter((row) =>\n      searchColumns.some(\n        (column) =>\n          row[column].toString().toLowerCase().indexOf(query.toLowerCase()) > -1\n      )\n    );\n  };\n  const columns = dataa[0] && Object.keys(dataa[0]);\n\n  return (\n    <div>\n      <h1>Cat API database</h1>\n      <div className=\"checkboxes\">\n        <form>\n          <div className=\"searchbox\">\n            <label>Search :</label>\n            <input\n              type=\"text\"\n              placeholder=\"search...\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            {columns &&\n              columns.map((column, index) => (\n                <label key={index}>\n                  <input\n                    type=\"checkbox\"\n                    checked={searchColumns.includes(column)}\n                    onChange={(e) => {\n                      const checked = searchColumns.includes(column);\n                      setSearchColumns((prev) =>\n                        checked\n                          ? prev.filter((sc) => sc !== column)\n                          : [...prev, column]\n                      );\n                    }}\n                  />\n                  {column}\n                </label>\n              ))}\n          </div>\n        </form>\n      </div>\n\n      {isError && <div>Something went wrong ...</div>}\n\n      {/* loading data  */}\n      {isLoading ? (\n        <div>Loading ...</div>\n      ) : (\n        <div>\n          <Datatable dataa={dataFilter(dataa)} />{\" \"}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Dataselectapp;\n","import React, { useState } from \"react\";\n\n// router\nimport { withRouter } from \"react-router-dom\";\n\n// styling\nimport \"./Menu.css\";\n\nconst Menu = (props) => {\n  // conditionally render dropdown affect based on this boolean\n  const [openMenu, setOpenMenu] = useState(false);\n\n  // parameter num corresponds to .open-# classes\n  // is assigned when Menu clicked triggering animated dropdown\n  const setClassNames = (num) => {\n    const classArr = [\"m-item\"];\n    if (openMenu) classArr.push(`open-${num}`);\n    return classArr.join(\" \");\n  };\n\n  // takes route string as parameter\n  const pushToRoute = (route) => {\n    props.history.push(route);\n    setOpenMenu(false);\n  };\n\n  return (\n    <div className=\"Menu\">\n      <div className={\"m-item m-logo\"} onClick={() => setOpenMenu(!openMenu)}>\n        API <i className=\"fab fa-react\"></i>\n      </div>\n      <div className={setClassNames(1)} onClick={() => pushToRoute(\"/\")}>\n        DataTable\n      </div>\n      <div className={setClassNames(2)} onClick={() => pushToRoute(\"/catapi\")}>\n        Cat API\n      </div>\n      <div className={setClassNames(3)} onClick={() => pushToRoute(\"/dogapi\")}>\n        Dog API\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Menu);\n","import React, { Fragment } from \"react\";\n\nimport Catimgdata from \"./components/Catapi/Catimgdata\";\nimport { Dogimgdata } from \"./components/Dogapi/Dogimgdata\";\n\nimport Dataselectapp from \"./components/Datatable/Dataselectapp\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// components\nimport Menu from \"./components/navigation/Menu\";\nimport \"./globalstyles.css\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Router>\n        <div className=\"navrender pages\">\n          <Menu />\n          <Switch>\n            <Route exact path=\"/\" component={Dataselectapp} />\n            <Route exact path=\"/catapi\" component={Catimgdata} />\n            {/* component={null} /> */}\n            <Route exact path=\"/dogapi\" component={Dogimgdata} />\n          </Switch>\n        </div>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n//  weather api e890ec3e296f4adc88922728211705\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}