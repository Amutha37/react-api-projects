{"version":3,"sources":["components/useFetch.js","components/Catapi/Allcatimgtable.jsx","components/Catapi/Catimgdata.js","components/Dogapi/Alldogimgtable.jsx","components/Dogapi/Dogimgdata.js","components/Datatable/Datatable.jsx","components/Datatable/Dataselectapp.js","components/navigation/dataimg1.jpeg","components/navigation/Menu.js","App.js","index.js"],"names":["useFetch","url","cache","useRef","initialState","status","error","results","useReducer","state","action","type","payload","dispatch","useEffect","cancelRequest","a","current","data","axios","response","message","fetchData","Allcatimgtable","apicatData","useState","currentPage","setcurrentPage","isPress","setPress","show","setShow","maxPageNumberLimit","setmaxPageNumberLimit","minPageNumberLimit","setminPageNumberLimit","handleClick","event","Number","target","id","pages","i","Math","ceil","length","push","indexOfLastItem","indexOfFirstItem","currentItems","slice","renderPageNumbers","map","number","onClick","className","handleNextbtn","handlePrevbtn","pageIncrementBtn","pageDecrementBtn","mouseOver","mouseOut","cellPadding","cellSpacing","row","src","alt","onMouseOver","onMouseOut","href","name","origin","Life_span","Description","Temperament","disabled","Catimgdata","process","REACT_APP_API_kEY_DOG","setApicatData","datainforr","cathoverimgdata","infoo","imgul","image","life_span","description","temperament","Alldogimgtable","apiData","bred_for","breed_group","height","Dogimgdata","setApiData","doghoverimgdata","infor","oricontry","country_code","dogimg","metric","Datatable","dataa","columns","Object","keys","heading","index","column","Dataselectapp","setDataa","query","setQuery","searchColumns","setSearchColumns","datainfo","catData","info","rows","placeholder","value","onChange","checked","includes","e","prev","filter","sc","some","toString","toLowerCase","indexOf","withRouter","props","openMenu","setOpenMenu","colorArr","menu","item","itemStyle","top","backgroundColor","boxShadow","style","route","history","renderMenuItems","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb6549ad.chunk.js","sourcesContent":["import { useEffect, useRef, useReducer } from \"react\";\nimport axios from \"axios\";\n\nexport const useFetch = (url) => {\n  const cache = useRef({});\n\n  const initialState = {\n    status: \"idle\",\n    error: null,\n    results: [],\n  };\n\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"FETCHING\":\n        return { ...initialState, status: \"fetching\" };\n      case \"FETCHED\":\n        return { ...initialState, status: \"fetched\", results: action.payload };\n      case \"FETCH_ERROR\":\n        return { ...initialState, status: \"error\", error: action.payload };\n      default:\n        return state;\n    }\n  }, initialState);\n\n  useEffect(() => {\n    let cancelRequest = false;\n    if (!url) return;\n\n    const fetchData = async () => {\n      dispatch({ type: \"FETCHING\" });\n      if (cache.current[url]) {\n        const data = cache.current[url];\n        dispatch({ type: \"FETCHED\", payload: data });\n      } else {\n        try {\n          const response = await axios(url);\n          const data = response.data;\n          cache.current[url] = data;\n          if (cancelRequest) return;\n          dispatch({ type: \"FETCHED\", payload: data });\n        } catch (error) {\n          if (cancelRequest) return;\n          dispatch({ type: \"FETCH_ERROR\", payload: error.message });\n        }\n      }\n    };\n\n    fetchData();\n\n    return function cleanup() {\n      cancelRequest = true;\n    };\n  }, [url]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\n// import \"./alldogimgtable.css\";\n\n// npm install --save react-jsx\nexport const Allcatimgtable = ({ apicatData }) => {\n  const [currentPage, setcurrentPage] = useState(1);\n  const [isPress, setPress] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n  const pageNumberLimit = 5;\n  const itemsPerPage = 5;\n\n  const handleClick = (event) => {\n    setcurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(apicatData.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = apicatData.slice(indexOfFirstItem, indexOfLastItem);\n\n  const renderPageNumbers = pages.map((number) => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return (\n        <li\n          key={number}\n          id={number}\n          onClick={handleClick}\n          className={currentPage === number ? \"active\" : null}\n        >\n          {number}\n        </li>\n      );\n    } else {\n      return null;\n    }\n  });\n\n  const handleNextbtn = () => {\n    setcurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setcurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit === 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementBtn = null;\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\n  }\n\n  let pageDecrementBtn = null;\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\n  }\n  const handleApibtn = () => {\n    setPress(!isPress);\n  };\n\n  const mouseOver = () => {\n    setShow(true);\n  };\n  const mouseOut = () => {\n    setShow(false);\n  };\n  return (\n    <>\n      <button className=\"dogbtn\" onClick={handleApibtn}>\n        {isPress ? \"All images\" : \"Names\"}\n      </button>\n\n      <table className=\"dml_table\" cellPadding={0} cellSpacing={0}>\n        <thead className=\"sticky-thc\">\n          <tr>\n            <th>Id</th>\n            {isPress ? null : <th>Image</th>}\n\n            {isPress ? <th>Name & Image</th> : <th>Name</th>}\n\n            <th>Origin</th>\n\n            <th>Life_span</th>\n            <th>Description</th>\n            <th>Temperament</th>\n          </tr>\n        </thead>\n        <tbody>\n          {currentItems.map((row, url) => (\n            <tr key={url}>\n              <td>{row.id}</td>\n              {isPress ? null : (\n                <td>\n                  <img src={row.url} alt=\"cat\" />\n                </td>\n              )}\n\n              {isPress ? (\n                <td onMouseOver={mouseOver} onMouseOut={mouseOut}>\n                  <p href=\"#\">\n                    {row.name} {show ? <img src={row.url} alt=\"cat\" /> : null}\n                  </p>\n                </td>\n              ) : (\n                <td>{row.name} </td>\n              )}\n\n              <td>{row.origin}</td>\n\n              <td>{row.Life_span}</td>\n              <td>{row.Description}</td>\n              <td>{row.Temperament}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"pageControler\">\n        <ul className=\"pageNumbers\">\n          <li>\n            <button\n              onClick={handlePrevbtn}\n              disabled={currentPage === pages[0] ? true : false}\n            >\n              Prev\n            </button>\n          </li>\n          {pageDecrementBtn}\n          {renderPageNumbers}\n          {pageIncrementBtn}\n\n          <li>\n            <button\n              onClick={handleNextbtn}\n              disabled={currentPage === pages[pages.length - 1] ? true : false}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport { useFetch } from \"../useFetch\";\n\nimport { Allcatimgtable } from \"./Allcatimgtable\";\n\nexport function Catimgdata() {\n  const url = `https://api.thecatapi.com/v1/breeds?api_key=${process.env.REACT_APP_API_kEY_DOG}`;\n  const { status, results, error } = useFetch(url);\n  const [apicatData, setApicatData] = useState([\n    {\n      id: \"\",\n      name: \"\",\n      origin: \"\",\n      Life_span: \"\",\n      Description: \"\",\n      Temperament: \"\",\n      url: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    let datainforr = [];\n    let cathoverimgdata = results;\n    for (let infoo in cathoverimgdata) {\n      // check if origin or country code availabe\n      let imgul = \"\";\n      !cathoverimgdata[infoo].image\n        ? (imgul = \"\")\n        : (imgul = cathoverimgdata[infoo].image.url);\n\n      datainforr.push({\n        id: cathoverimgdata[infoo].id,\n        name: cathoverimgdata[infoo].name,\n        origin: cathoverimgdata[infoo].origin,\n        Life_span: cathoverimgdata[infoo].life_span,\n        Description: cathoverimgdata[infoo].description,\n        Temperament: cathoverimgdata[infoo].temperament,\n        url: imgul,\n      });\n    }\n\n    setApicatData(datainforr);\n  }, [results]);\n\n  return (\n    <>\n      <div className=\"heading\">\n        <h1>Cats Characteristics</h1>\n      </div>\n      {/* <br /> */}\n      {/* Error message */}\n      <main>\n        {status === \"idle\" && (\n          <div> Let's get started by searching for an article! </div>\n        )}\n        {status === \"error\" && <div>{error}</div>}\n        {status === \"fetching\" && <div className=\"loading\"></div>}\n        {status === \"fetched\" && (\n          <>\n            <Allcatimgtable apicatData={apicatData} />\n          </>\n        )}\n      </main>\n    </>\n  );\n}\n// export default Catimgdata;\n","import React, { useState } from \"react\";\n// import \"./alldogimgtable.css\";\n\n// npm install --save react-jsx\n\nexport const Alldogimgtable = ({ apiData }) => {\n  const [currentPage, setcurrentPage] = useState(1);\n  const [isPress, setPress] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n  const pageNumberLimit = 5;\n  const itemsPerPage = 5;\n\n  const handleClick = (event) => {\n    setcurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(apiData.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = apiData.slice(indexOfFirstItem, indexOfLastItem);\n\n  const renderPageNumbers = pages.map((number) => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return (\n        <li\n          key={number}\n          id={number}\n          onClick={handleClick}\n          className={currentPage === number ? \"active\" : null}\n        >\n          {number}\n        </li>\n      );\n    } else {\n      return null;\n    }\n  });\n\n  const handleNextbtn = () => {\n    setcurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setcurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit === 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementBtn = null;\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\n  }\n\n  let pageDecrementBtn = null;\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\n  }\n  const handleApibtn = () => {\n    setPress(!isPress);\n  };\n\n  const mouseOver = () => {\n    setShow(true);\n  };\n  const mouseOut = () => {\n    setShow(false);\n  };\n  return (\n    <>\n      <button className=\"dogbtn\" onClick={handleApibtn}>\n        {isPress ? \"All images\" : \"Names\"}\n      </button>\n\n      <table className=\"dml_table\" cellPadding={0} cellSpacing={0}>\n        <thead className=\"sticky-thc\">\n          <tr>\n            <th>Id</th>\n            {isPress ? null : <th>Image</th>}\n\n            {isPress ? <th>Name & Image</th> : <th>Name</th>}\n\n            <th>Origin</th>\n            <th>Breed_for</th>\n            <th>Breed_group</th>\n            <th>Life_span</th>\n            <th>Height</th>\n            <th>Temperament</th>\n          </tr>\n        </thead>\n        <tbody>\n          {currentItems.map((row, url) => (\n            <tr key={url}>\n              <td>{row.id}</td>\n              {isPress ? null : (\n                <td>\n                  <img src={row.url} alt=\"dog\" />\n                </td>\n              )}\n\n              {isPress ? (\n                <td onMouseOver={mouseOver} onMouseOut={mouseOut}>\n                  <p href=\"#\">\n                    {row.name} {show ? <img src={row.url} alt=\"dog\" /> : null}\n                  </p>\n                </td>\n              ) : (\n                <td>{row.name} </td>\n              )}\n\n              <td>{row.origin}</td>\n              <td>{row.bred_for}</td>\n              <td>{row.breed_group}</td>\n              <td>{row.life_span}</td>\n              <td>{row.height} cm</td>\n              <td>{row.temperament}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"pageControler\">\n        <ul className=\"pageNumbers\">\n          <li>\n            <button\n              onClick={handlePrevbtn}\n              disabled={currentPage === pages[0] ? true : false}\n            >\n              Prev\n            </button>\n          </li>\n          {pageDecrementBtn}\n          {renderPageNumbers}\n          {pageIncrementBtn}\n\n          <li>\n            <button\n              onClick={handleNextbtn}\n              disabled={currentPage === pages[pages.length - 1] ? true : false}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n// export default Alldogimgtable;\n","import React, { useEffect, useState } from \"react\";\nimport { useFetch } from \"../useFetch\";\nimport { Alldogimgtable } from \"./Alldogimgtable\";\n\nexport function Dogimgdata() {\n  const url = `https://api.thedogapi.com/v1/breeds?api_key=${process.env.REACT_APP_API_kEY_DOG}`;\n  const { status, results, error } = useFetch(url);\n  //   const [isErrorr, setIsErrorr] = useState(false);\n  //   const [isLoadingg, setIsLoadingg] = useState(false);\n  const [apiData, setApiData] = useState([\n    {\n      id: \"\",\n      bred_for: \"\",\n      breed_group: \"\",\n      height: \"\",\n      name: \"\",\n      origin: \"\",\n      life_span: \"\",\n      Temperament: \"\",\n      url: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    let datainforr = [];\n    let doghoverimgdata = [];\n    doghoverimgdata = results;\n\n    for (let infor in doghoverimgdata) {\n      // check if origin or country code availabe\n\n      let oricontry = \"\";\n      if (\n        !doghoverimgdata[infor].origin &&\n        !doghoverimgdata[infor].country_code\n      ) {\n        oricontry = \"\";\n      } else {\n        doghoverimgdata[infor].origin\n          ? (oricontry = doghoverimgdata[infor].origin)\n          : (oricontry = doghoverimgdata[infor].country_code);\n      }\n      // check if image available\n\n      let dogimg = \"\";\n      if (!doghoverimgdata[infor].image) {\n        dogimg = \"\";\n      } else {\n        dogimg = doghoverimgdata[infor].image.url;\n      }\n\n      datainforr.push({\n        id: doghoverimgdata[infor].id,\n        bred_for: doghoverimgdata[infor].bred_for,\n        breed_group: doghoverimgdata[infor].breed_group,\n        height: doghoverimgdata[infor].height.metric,\n        name: doghoverimgdata[infor].name,\n        origin: oricontry,\n        life_span: doghoverimgdata[infor].life_span,\n        temperament: doghoverimgdata[infor].temperament,\n        url: dogimg,\n      });\n    }\n    setApiData(datainforr);\n  }, [results]);\n\n  return (\n    <div className=\"heading\">\n      <h1>Dogs characteristics</h1> <br />\n      <main>\n        {status === \"idle\" && (\n          <div> Let's get started by searching for an article! </div>\n        )}\n        {status === \"error\" && <div>{error}</div>}\n        {status === \"fetching\" && <div className=\"loading\"></div>}\n        {status === \"fetched\" && (\n          <>\n            <Alldogimgtable apiData={apiData} />\n          </>\n        )}\n      </main>\n    </div>\n  );\n}\n// export default Dogimgdata;\n","import React, { useState } from \"react\";\n\nconst Datatable = ({ dataa }) => {\n  const columns = dataa[0] && Object.keys(dataa[0]);\n  const [currentPage, setcurrentPage] = useState(1);\n\n  const [maxPageNumberLimit, setmaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setminPageNumberLimit] = useState(0);\n  const pageNumberLimit = 5;\n  const itemsPerPage = 5;\n\n  const handleClick = (event) => {\n    setcurrentPage(Number(event.target.id));\n  };\n\n  const pages = [];\n  for (let i = 1; i <= Math.ceil(dataa.length / itemsPerPage); i++) {\n    pages.push(i);\n  }\n\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = dataa.slice(indexOfFirstItem, indexOfLastItem);\n\n  const renderPageNumbers = pages.map((number) => {\n    if (number < maxPageNumberLimit + 1 && number > minPageNumberLimit) {\n      return (\n        <li\n          key={number}\n          id={number}\n          onClick={handleClick}\n          className={currentPage === number ? \"active\" : null}\n        >\n          {number}\n        </li>\n      );\n    } else {\n      return null;\n    }\n  });\n\n  const handleNextbtn = () => {\n    setcurrentPage(currentPage + 1);\n\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setmaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  };\n\n  const handlePrevbtn = () => {\n    setcurrentPage(currentPage - 1);\n\n    if ((currentPage - 1) % pageNumberLimit === 0) {\n      setmaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n      setminPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n    }\n  };\n\n  let pageIncrementBtn = null;\n  if (pages.length > maxPageNumberLimit) {\n    pageIncrementBtn = <li onClick={handleNextbtn}> &hellip; </li>;\n  }\n\n  let pageDecrementBtn = null;\n  if (minPageNumberLimit >= 1) {\n    pageDecrementBtn = <li onClick={handlePrevbtn}> &hellip; </li>;\n  }\n\n  return (\n    <>\n      <table className=\"dml_table\" cellPadding={0} cellSpacing={0}>\n        <thead className=\"sticky-thc\">\n          <tr>\n            {dataa[0] &&\n              columns.map((heading, index) => <th key={index}>{heading}</th>)}\n          </tr>\n        </thead>\n        <tbody>\n          {currentItems.map((row, index) => (\n            <tr key={index}>\n              {columns.map((column, id) => (\n                <td key={id}>{row[column]}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"pageControler\">\n        <ul className=\"pageNumbers\">\n          <li>\n            <button\n              onClick={handlePrevbtn}\n              disabled={currentPage === pages[0] ? true : false}\n            >\n              Prev\n            </button>\n          </li>\n          {pageDecrementBtn}\n          {renderPageNumbers}\n          {pageIncrementBtn}\n\n          <li>\n            <button\n              onClick={handleNextbtn}\n              disabled={currentPage === pages[pages.length - 1] ? true : false}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Datatable;\n","import React, { useState, useEffect } from \"react\";\nimport { useFetch } from \"../useFetch\";\nimport Datatable from \"./Datatable\";\n\nfunction Dataselectapp() {\n  const url = `https://api.thecatapi.com/v1/breeds?api_key=${process.env.REACT_APP_API_kEY_DOG}`;\n  const { status, results, error } = useFetch(url);\n  const [dataa, setDataa] = useState([\n    {\n      id: \"\",\n      name: \"\",\n      origin: \"\",\n      Life_span: \"\",\n      Description: \"\",\n      Temperament: \"\",\n      // Image: {},\n    },\n  ]);\n  const [query, setQuery] = useState(\"\");\n  const [searchColumns, setSearchColumns] = useState([\"origin\"]);\n\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [isError, setIsError] = useState(false);\n\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     setIsError(false);\n  //     setIsLoading(true);\n\n  //     try {\n  //       const result = await axios.get(\n  //         `https://api.thecatapi.com/v1/breeds?attach_breed=0&api_key=${process.env.REACT_APP_API_KEY_CAT}`\n  //       );\n  useEffect(() => {\n    let datainfo = [];\n    let catData = results;\n    for (let info in catData) {\n      datainfo.push({\n        id: catData[info].id,\n        name: catData[info].name,\n        origin: catData[info].origin,\n        Life_span: catData[info].life_span,\n        Description: catData[info].description,\n        Temperament: catData[info].temperament,\n        // Image: catData[info].image,\n      });\n    }\n\n    setDataa(datainfo);\n  }, [results]);\n\n  // not all data is string\n  const dataFilter = (rows) => {\n    return rows.filter((row) =>\n      searchColumns.some(\n        (column) =>\n          row[column].toString().toLowerCase().indexOf(query.toLowerCase()) > -1\n      )\n    );\n  };\n  const columns = dataa[0] && Object.keys(dataa[0]);\n\n  return (\n    <>\n      <h1>Cat API database</h1>\n      <div className=\"checkboxes\">\n        <form>\n          <div className=\"searchbox\">\n            <label>Search :</label>\n            <input\n              type=\"text\"\n              placeholder=\"search...\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n\n          <div className=\"checkbox\">\n            {columns &&\n              columns.map((column, index) => (\n                <label key={index}>\n                  <input\n                    type=\"checkbox\"\n                    checked={searchColumns.includes(column)}\n                    onChange={(e) => {\n                      const checked = searchColumns.includes(column);\n                      setSearchColumns((prev) =>\n                        checked\n                          ? prev.filter((sc) => sc !== column)\n                          : [...prev, column]\n                      );\n                    }}\n                  />\n                  {column}\n                </label>\n              ))}\n          </div>\n        </form>\n      </div>\n      <main>\n        {status === \"idle\" && (\n          <div> Let's get started by searching for an article! </div>\n        )}\n        {status === \"error\" && <div>{error}</div>}\n        {status === \"fetching\" && <div className=\"loading\"></div>}\n        {status === \"fetched\" && (\n          <>\n            <Datatable dataa={dataFilter(dataa)} />{\" \"}\n          </>\n        )}\n      </main>\n    </>\n  );\n}\n\nexport default Dataselectapp;\n","export default __webpack_public_path__ + \"static/media/dataimg1.941ce18e.jpeg\";","import React, { useState } from \"react\";\nimport dataimg from \"./dataimg1.jpeg\";\n// data\nimport data from \"./menudata.json\";\n\n// router\nimport { withRouter } from \"react-router-dom\";\n\n// styling\nimport \"./Menu.css\";\n\nconst Menu = (props) => {\n  // conditionally render dropdown affect based on this boolean\n  const [openMenu, setOpenMenu] = useState(false);\n\n  // takes route string as parameter\n  const pushToRoute = (route) => {\n    props.history.push(route);\n    setOpenMenu(false);\n  };\n\n  // render each menu item after initial Menu button\n  const renderMenuItems = (data) => {\n    const colorArr = [\"#00ced1\", \"#7b68ee\", \"#6495ed\"];\n\n    return data.menu.map((item, index) => {\n      // if counter is over 2, resets to 0\n      // for colorArr bracket notation to get sequence of colors\n\n      // dynamic styles for each menu item\n      const itemStyle = {\n        top: `${index * 1.8}em`,\n        backgroundColor: colorArr[index % colorArr.length],\n        boxShadow: `2px 3px 3px #a77dda`,\n      };\n\n      return (\n        <div\n          className=\"m-item\"\n          key={item.id}\n          style={openMenu ? itemStyle : null}\n          onClick={() => pushToRoute(item.route)}\n        >\n          {item.name}\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className=\"menucontainer\">\n      <div className=\"Menu\">\n        <div className={\"m-item m-logo\"} onClick={() => setOpenMenu(!openMenu)}>\n          Menu <i className=\"fab fa-react\"></i>\n        </div>\n\n        {renderMenuItems(data)}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Menu);\n","import React, { Fragment } from \"react\";\n\nimport { Catimgdata } from \"./components/Catapi/Catimgdata\";\nimport { Dogimgdata } from \"./components/Dogapi/Dogimgdata\";\n\nimport Dataselectapp from \"./components/Datatable/Dataselectapp\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// menu link components\nimport Menu from \"./components/navigation/Menu\";\nimport \"./globalstyles.css\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Router>\n        <div className=\"navrender pages\">\n          <Menu />\n          <Switch>\n            <Route exact path=\"/\" component={Dataselectapp} />\n            <Route exact path=\"/catapi\" component={Catimgdata} />\n            <Route exact path=\"/dogapi\" component={Dogimgdata} />\n          </Switch>\n        </div>\n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n//  weather api e890ec3e296f4adc88922728211705\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}